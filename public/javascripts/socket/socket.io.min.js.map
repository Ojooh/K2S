{
version: 3,
sources: [
"webpack://io/webpack/universalModuleDefinition",
"webpack://io/webpack/bootstrap",
"webpack://io/./node_modules/component-emitter/index.js",
"webpack://io/./node_modules/engine.io-parser/lib/index.js",
"webpack://io/./node_modules/engine.io-client/lib/globalThis.browser.js",
"webpack://io/./node_modules/engine.io-client/lib/transport.js",
"webpack://io/./node_modules/parseqs/index.js",
"webpack://io/./node_modules/socket.io-parser/dist/index.js",
"webpack://io/./node_modules/parseuri/index.js",
"webpack://io/./build/manager.js",
"webpack://io/./node_modules/engine.io-client/lib/transports/index.js",
"webpack://io/./node_modules/engine.io-client/lib/xmlhttprequest.js",
"webpack://io/./node_modules/engine.io-client/lib/transports/polling.js",
"webpack://io/./node_modules/engine.io-parser/lib/commons.js",
"webpack://io/./node_modules/yeast/index.js",
"webpack://io/./node_modules/engine.io-client/lib/util.js",
"webpack://io/./build/socket.js",
"webpack://io/./node_modules/socket.io-parser/dist/is-binary.js",
"webpack://io/./build/on.js",
"webpack://io/./build/index.js",
"webpack://io/./build/url.js",
"webpack://io/./node_modules/engine.io-client/lib/index.js",
"webpack://io/./node_modules/engine.io-client/lib/socket.js",
"webpack://io/./node_modules/has-cors/index.js",
"webpack://io/./node_modules/engine.io-client/lib/transports/polling-xhr.js",
"webpack://io/./node_modules/engine.io-parser/lib/encodePacket.browser.js",
"webpack://io/./node_modules/engine.io-parser/lib/decodePacket.browser.js",
"webpack://io/./node_modules/engine.io-parser/node_modules/base64-arraybuffer/lib/base64-arraybuffer.js",
"webpack://io/./node_modules/engine.io-client/lib/transports/polling-jsonp.js",
"webpack://io/./node_modules/engine.io-client/lib/transports/websocket.js",
"webpack://io/./node_modules/engine.io-client/lib/transports/websocket-constructor.browser.js",
"webpack://io/./node_modules/socket.io-parser/dist/binary.js",
"webpack://io/./node_modules/backo2/index.js"
],
names: [
"root",
"factory",
"exports",
"module",
"define",
"amd",
"self",
"installedModules",
"__webpack_require__",
"moduleId",
"i",
"l",
"modules",
"call",
"m",
"c",
"d",
"name",
"getter",
"o",
"Object",
"defineProperty",
"enumerable",
"get",
"r",
"Symbol",
"toStringTag",
"value",
"t",
"mode",
"__esModule",
"ns",
"create",
"key",
"bind",
"n",
"object",
"property",
"prototype",
"hasOwnProperty",
"p",
"s",
"Emitter",
"obj",
"mixin",
"on",
"addEventListener",
"event",
"fn",
"this",
"_callbacks",
"push",
"once",
"off",
"apply",
"arguments",
"removeListener",
"removeAllListeners",
"removeEventListener",
"length",
"cb",
"callbacks",
"splice",
"emit",
"args",
"Array",
"len",
"slice",
"listeners",
"hasListeners",
"encodePacket",
"require",
"decodePacket",
"SEPARATOR",
"String",
"fromCharCode",
"protocol",
"encodePayload",
"packets",
"callback",
"encodedPackets",
"count",
"forEach",
"packet",
"encodedPacket",
"join",
"decodePayload",
"encodedPayload",
"binaryType",
"split",
"decodedPacket",
"type",
"window",
"Function",
"parser",
"Transport",
"opts",
"query",
"readyState",
"socket",
"msg",
"desc",
"err",
"Error",
"description",
"doOpen",
"doClose",
"onClose",
"write",
"writable",
"data",
"onPacket",
"encode",
"str",
"encodeURIComponent",
"decode",
"qs",
"qry",
"pairs",
"pair",
"decodeURIComponent",
"Decoder",
"Encoder",
"PacketType",
"binary_1",
"is_binary_1",
"EVENT",
"ACK",
"hasBinary",
"encodeAsString",
"BINARY_EVENT",
"BINARY_ACK",
"encodeAsBinary",
"attachments",
"nsp",
"id",
"JSON",
"stringify",
"deconstruction",
"deconstructPacket",
"pack",
"buffers",
"unshift",
"decodeString",
"reconstructor",
"BinaryReconstructor",
"isBinary",
"base64",
"takeBinaryData",
"Number",
"charAt",
"undefined",
"start",
"buf",
"substring",
"next",
"payload",
"parse",
"e",
"tryParse",
"substr",
"isPayloadValid",
"finishedReconstruction",
"CONNECT",
"DISCONNECT",
"CONNECT_ERROR",
"isArray",
"reconPack",
"binData",
"reconstructPacket",
"re",
"parts",
"src",
"b",
"indexOf",
"replace",
"exec",
"uri",
"source",
"host",
"authority",
"ipv6uri",
"pathNames",
"path",
"names",
"queryKey",
"$0",
"$1",
"$2",
"Manager",
"eio",
"socket_1",
"on_1",
"Backoff",
"nsps",
"subs",
"reconnection",
"reconnectionAttempts",
"Infinity",
"reconnectionDelay",
"reconnectionDelayMax",
"randomizationFactor",
"backoff",
"min",
"max",
"jitter",
"timeout",
"_readyState",
"_parser",
"encoder",
"decoder",
"_autoConnect",
"autoConnect",
"open",
"v",
"_reconnection",
"_reconnectionAttempts",
"_a",
"_reconnectionDelay",
"setMin",
"_randomizationFactor",
"setJitter",
"_reconnectionDelayMax",
"setMax",
"_timeout",
"_reconnecting",
"attempts",
"reconnect",
"engine",
"skipReconnect",
"openSubDestroy",
"onopen",
"errorSub",
"cleanup",
"maybeReconnectOnOpen",
"timer",
"setTimeout",
"close",
"clearTimeout",
"onping",
"ondata",
"onerror",
"onclose",
"ondecoded",
"add",
"Socket",
"keys",
"active",
"_close",
"options",
"subDestroy",
"destroy",
"reset",
"reason",
"delay",
"duration",
"onreconnect",
"attempt",
"XMLHttpRequest",
"XHR",
"JSONP",
"websocket",
"polling",
"xd",
"xs",
"jsonp",
"location",
"isSSL",
"port",
"hostname",
"secure",
"xdomain",
"xscheme",
"forceJSONP",
"hasCORS",
"globalThis",
"enablesXDR",
"XDomainRequest",
"concat",
"parseqs",
"yeast",
"Polling",
"poll",
"onPause",
"pause",
"total",
"doPoll",
"index",
"onOpen",
"doWrite",
"schema",
"timestampRequests",
"timestampParam",
"supportsBinary",
"sid",
"b64",
"PACKET_TYPES",
"PACKET_TYPES_REVERSE",
"ERROR_PACKET",
"prev",
"alphabet",
"map",
"seed",
"num",
"encoded",
"Math",
"floor",
"now",
"Date",
"decoded",
"pick",
"attr",
"reduce",
"acc",
"k",
"socket_io_parser_1",
"RESERVED_EVENTS",
"freeze",
"connect",
"connect_error",
"disconnect",
"disconnecting",
"newListener",
"io",
"receiveBuffer",
"sendBuffer",
"ids",
"acks",
"flags",
"connected",
"disconnected",
"auth",
"onpacket",
"subEvents",
"ev",
"compress",
"pop",
"isTransportWritable",
"transport",
"discardPacket",
"_packet",
"onconnect",
"onevent",
"onack",
"ondisconnect",
"message",
"ack",
"emitEvent",
"_anyListeners",
"sent",
"emitBuffered",
"listener",
"withNativeArrayBuffer",
"ArrayBuffer",
"toString",
"withNativeBlob",
"Blob",
"withNativeFile",
"File",
"isView",
"buffer",
"toJSON",
"url_1",
"manager_1",
"lookup",
"cache",
"managers",
"parsed",
"url",
"sameNamespace",
"forceNew",
"multiplex",
"manager_2",
"parseuri",
"loc",
"test",
"ipv6",
"href",
"transports",
"writeBuffer",
"prevBufferLen",
"agent",
"withCredentials",
"upgrade",
"rememberUpgrade",
"rejectUnauthorized",
"perMessageDeflate",
"threshold",
"transportOptions",
"upgrades",
"pingInterval",
"pingTimeout",
"pingTimeoutTimer",
"clone",
"EIO",
"priorWebsocketSuccess",
"createTransport",
"shift",
"setTransport",
"onDrain",
"onError",
"probe",
"failed",
"onTransportOpen",
"onlyBinaryUpgrades",
"upgradeLosesBinary",
"send",
"upgrading",
"flush",
"freezeTransport",
"error",
"onTransportClose",
"onupgrade",
"to",
"onHandshake",
"resetPingTimeout",
"sendPacket",
"code",
"filterUpgrades",
"cleanupAndClose",
"waitForUpgrade",
"pingIntervalTimer",
"filteredUpgrades",
"j",
"empty",
"hasXHR2",
"responseType",
"forceBase64",
"Request",
"req",
"request",
"method",
"onData",
"pollXhr",
"async",
"xhr",
"extraHeaders",
"setDisableHeaderCheck",
"setRequestHeader",
"requestTimeout",
"hasXDR",
"onload",
"onLoad",
"responseText",
"onreadystatechange",
"status",
"document",
"requestsCount",
"requests",
"onSuccess",
"fromError",
"abort",
"attachEvent",
"unloadHandler",
"encodeBlobAsBase64",
"fileReader",
"FileReader",
"content",
"result",
"readAsDataURL",
"base64decoder",
"decodeBase64Packet",
"mapBinary",
"chars",
"arraybuffer",
"bytes",
"Uint8Array",
"encoded1",
"encoded2",
"encoded3",
"encoded4",
"bufferLength",
"rNewline",
"rEscapedNewline",
"JSONPPolling",
"___eio",
"script",
"parentNode",
"removeChild",
"form",
"iframe",
"createElement",
"insertAt",
"getElementsByTagName",
"insertBefore",
"head",
"body",
"appendChild",
"navigator",
"userAgent",
"area",
"iframeId",
"className",
"style",
"position",
"top",
"left",
"target",
"setAttribute",
"complete",
"initIframe",
"html",
"action",
"submit",
"WebSocket",
"usingBrowserWebSocket",
"defaultBinaryType",
"isReactNative",
"product",
"toLowerCase",
"WS",
"check",
"protocols",
"headers",
"ws",
"addEventListeners",
"onmessage",
"Buffer",
"byteLength",
"MozWebSocket",
"packetData",
"_deconstructPacket",
"placeholder",
"_placeholder",
"newData",
"_reconstructPacket",
"ms",
"factor",
"pow",
"rand",
"random",
"deviation"
],
mappings: "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",
file: "socket.io.min.js",
sourcesContent: [
"(function webpackUniversalModuleDefinition(root, factory) { if(typeof exports === 'object' && typeof module === 'object') module.exports = factory(); else if(typeof define === 'function' && define.amd) define([], factory); else if(typeof exports === 'object') exports["io"] = factory(); else root["io"] = factory(); })(self, function() { return ",
" // The module cache var installedModules = {}; // The require function function __webpack_require__(moduleId) { // Check if module is in cache if(installedModules[moduleId]) { return installedModules[moduleId].exports; } // Create a new module (and put it into the cache) var module = installedModules[moduleId] = { i: moduleId, l: false, exports: {} }; // Execute the module function modules[moduleId].call(module.exports, module, module.exports, __webpack_require__); // Flag the module as loaded module.l = true; // Return the exports of the module return module.exports; } // expose the modules object (__webpack_modules__) __webpack_require__.m = modules; // expose the module cache __webpack_require__.c = installedModules; // define getter function for harmony exports __webpack_require__.d = function(exports, name, getter) { if(!__webpack_require__.o(exports, name)) { Object.defineProperty(exports, name, { enumerable: true, get: getter }); } }; // define __esModule on exports __webpack_require__.r = function(exports) { if(typeof Symbol !== 'undefined' && Symbol.toStringTag) { Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' }); } Object.defineProperty(exports, '__esModule', { value: true }); }; // create a fake namespace object // mode & 1: value is a module id, require it // mode & 2: merge all properties of value into the ns // mode & 4: return value when already ns object // mode & 8|1: behave like require __webpack_require__.t = function(value, mode) { if(mode & 1) value = __webpack_require__(value); if(mode & 8) return value; if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value; var ns = Object.create(null); __webpack_require__.r(ns); Object.defineProperty(ns, 'default', { enumerable: true, value: value }); if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key)); return ns; }; // getDefaultExport function for compatibility with non-harmony modules __webpack_require__.n = function(module) { var getter = module && module.__esModule ? function getDefault() { return module['default']; } : function getModuleExports() { return module; }; __webpack_require__.d(getter, 'a', getter); return getter; }; // Object.prototype.hasOwnProperty.call __webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); }; // __webpack_public_path__ __webpack_require__.p = ""; // Load entry module and return exports return __webpack_require__(__webpack_require__.s = 17); ",
" /** * Expose `Emitter`. */ if (typeof module !== 'undefined') { module.exports = Emitter; } /** * Initialize a new `Emitter`. * * @api public */ function Emitter(obj) { if (obj) return mixin(obj); }; /** * Mixin the emitter properties. * * @param {Object} obj * @return {Object} * @api private */ function mixin(obj) { for (var key in Emitter.prototype) { obj[key] = Emitter.prototype[key]; } return obj; } /** * Listen on the given `event` with `fn`. * * @param {String} event * @param {Function} fn * @return {Emitter} * @api public */ Emitter.prototype.on = Emitter.prototype.addEventListener = function(event, fn){ this._callbacks = this._callbacks || {}; (this._callbacks['$' + event] = this._callbacks['$' + event] || []) .push(fn); return this; }; /** * Adds an `event` listener that will be invoked a single * time then automatically removed. * * @param {String} event * @param {Function} fn * @return {Emitter} * @api public */ Emitter.prototype.once = function(event, fn){ function on() { this.off(event, on); fn.apply(this, arguments); } on.fn = fn; this.on(event, on); return this; }; /** * Remove the given callback for `event` or all * registered callbacks. * * @param {String} event * @param {Function} fn * @return {Emitter} * @api public */ Emitter.prototype.off = Emitter.prototype.removeListener = Emitter.prototype.removeAllListeners = Emitter.prototype.removeEventListener = function(event, fn){ this._callbacks = this._callbacks || {}; // all if (0 == arguments.length) { this._callbacks = {}; return this; } // specific event var callbacks = this._callbacks['$' + event]; if (!callbacks) return this; // remove all handlers if (1 == arguments.length) { delete this._callbacks['$' + event]; return this; } // remove specific handler var cb; for (var i = 0; i < callbacks.length; i++) { cb = callbacks[i]; if (cb === fn || cb.fn === fn) { callbacks.splice(i, 1); break; } } // Remove event specific arrays for event types that no // one is subscribed for to avoid memory leak. if (callbacks.length === 0) { delete this._callbacks['$' + event]; } return this; }; /** * Emit `event` with the given args. * * @param {String} event * @param {Mixed} ... * @return {Emitter} */ Emitter.prototype.emit = function(event){ this._callbacks = this._callbacks || {}; var args = new Array(arguments.length - 1) , callbacks = this._callbacks['$' + event]; for (var i = 1; i < arguments.length; i++) { args[i - 1] = arguments[i]; } if (callbacks) { callbacks = callbacks.slice(0); for (var i = 0, len = callbacks.length; i < len; ++i) { callbacks[i].apply(this, args); } } return this; }; /** * Return array of callbacks for `event`. * * @param {String} event * @return {Array} * @api public */ Emitter.prototype.listeners = function(event){ this._callbacks = this._callbacks || {}; return this._callbacks['$' + event] || []; }; /** * Check if this emitter has `event` handlers. * * @param {String} event * @return {Boolean} * @api public */ Emitter.prototype.hasListeners = function(event){ return !! this.listeners(event).length; }; ",
"const encodePacket = require("./encodePacket"); const decodePacket = require("./decodePacket"); const SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text const encodePayload = (packets, callback) => { // some packets may be added to the array while encoding, so the initial length must be saved const length = packets.length; const encodedPackets = new Array(length); let count = 0; packets.forEach((packet, i) => { // force base64 encoding for binary packets encodePacket(packet, false, encodedPacket => { encodedPackets[i] = encodedPacket; if (++count === length) { callback(encodedPackets.join(SEPARATOR)); } }); }); }; const decodePayload = (encodedPayload, binaryType) => { const encodedPackets = encodedPayload.split(SEPARATOR); const packets = []; for (let i = 0; i < encodedPackets.length; i++) { const decodedPacket = decodePacket(encodedPackets[i], binaryType); packets.push(decodedPacket); if (decodedPacket.type === "error") { break; } } return packets; }; module.exports = { protocol: 4, encodePacket, encodePayload, decodePacket, decodePayload }; ",
"module.exports = (() => { if (typeof self !== "undefined") { return self; } else if (typeof window !== "undefined") { return window; } else { return Function("return this")(); } })(); ",
"const parser = require("engine.io-parser"); const Emitter = require("component-emitter"); class Transport extends Emitter { /** * Transport abstract constructor. * * @param {Object} options. * @api private */ constructor(opts) { super(); this.opts = opts; this.query = opts.query; this.readyState = ""; this.socket = opts.socket; } /** * Emits an error. * * @param {String} str * @return {Transport} for chaining * @api public */ onError(msg, desc) { const err = new Error(msg); err.type = "TransportError"; err.description = desc; this.emit("error", err); return this; } /** * Opens the transport. * * @api public */ open() { if ("closed" === this.readyState || "" === this.readyState) { this.readyState = "opening"; this.doOpen(); } return this; } /** * Closes the transport. * * @api private */ close() { if ("opening" === this.readyState || "open" === this.readyState) { this.doClose(); this.onClose(); } return this; } /** * Sends multiple packets. * * @param {Array} packets * @api private */ send(packets) { if ("open" === this.readyState) { this.write(packets); } else { throw new Error("Transport not open"); } } /** * Called upon open * * @api private */ onOpen() { this.readyState = "open"; this.writable = true; this.emit("open"); } /** * Called with data. * * @param {String} data * @api private */ onData(data) { const packet = parser.decodePacket(data, this.socket.binaryType); this.onPacket(packet); } /** * Called with a decoded packet. */ onPacket(packet) { this.emit("packet", packet); } /** * Called upon close. * * @api private */ onClose() { this.readyState = "closed"; this.emit("close"); } } module.exports = Transport; ",
"/** * Compiles a querystring * Returns string representation of the object * * @param {Object} * @api private */ exports.encode = function (obj) { var str = ''; for (var i in obj) { if (obj.hasOwnProperty(i)) { if (str.length) str += '&'; str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]); } } return str; }; /** * Parses a simple querystring into an object * * @param {String} qs * @api private */ exports.decode = function(qs){ var qry = {}; var pairs = qs.split('&'); for (var i = 0, l = pairs.length; i < l; i++) { var pair = pairs[i].split('='); qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]); } return qry; }; ",
""use strict"; Object.defineProperty(exports, "__esModule", { value: true }); exports.Decoder = exports.Encoder = exports.PacketType = exports.protocol = void 0; const Emitter = require("component-emitter"); const binary_1 = require("./binary"); const is_binary_1 = require("./is-binary"); /** * Protocol version. * * @public */ exports.protocol = 5; var PacketType; (function (PacketType) { PacketType[PacketType["CONNECT"] = 0] = "CONNECT"; PacketType[PacketType["DISCONNECT"] = 1] = "DISCONNECT"; PacketType[PacketType["EVENT"] = 2] = "EVENT"; PacketType[PacketType["ACK"] = 3] = "ACK"; PacketType[PacketType["CONNECT_ERROR"] = 4] = "CONNECT_ERROR"; PacketType[PacketType["BINARY_EVENT"] = 5] = "BINARY_EVENT"; PacketType[PacketType["BINARY_ACK"] = 6] = "BINARY_ACK"; })(PacketType = exports.PacketType || (exports.PacketType = {})); /** * A socket.io Encoder instance */ class Encoder { /** * Encode a packet as a single string if non-binary, or as a * buffer sequence, depending on packet type. * * @param {Object} obj - packet object */ encode(obj) { if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) { if (is_binary_1.hasBinary(obj)) { obj.type = obj.type === PacketType.EVENT ? PacketType.BINARY_EVENT : PacketType.BINARY_ACK; return this.encodeAsBinary(obj); } } return [this.encodeAsString(obj)]; } /** * Encode packet as string. */ encodeAsString(obj) { // first is type let str = "" + obj.type; // attachments if we have them if (obj.type === PacketType.BINARY_EVENT || obj.type === PacketType.BINARY_ACK) { str += obj.attachments + "-"; } // if we have a namespace other than `/` // we append it followed by a comma `,` if (obj.nsp && "/" !== obj.nsp) { str += obj.nsp + ","; } // immediately followed by the id if (null != obj.id) { str += obj.id; } // json data if (null != obj.data) { str += JSON.stringify(obj.data); } return str; } /** * Encode packet as 'buffer sequence' by removing blobs, and * deconstructing packet into object with placeholders and * a list of buffers. */ encodeAsBinary(obj) { const deconstruction = binary_1.deconstructPacket(obj); const pack = this.encodeAsString(deconstruction.packet); const buffers = deconstruction.buffers; buffers.unshift(pack); // add packet info to beginning of data list return buffers; // write all the buffers } } exports.Encoder = Encoder; /** * A socket.io Decoder instance * * @return {Object} decoder */ class Decoder extends Emitter { constructor() { super(); } /** * Decodes an encoded packet string into packet JSON. * * @param {String} obj - encoded packet */ add(obj) { let packet; if (typeof obj === "string") { packet = this.decodeString(obj); if (packet.type === PacketType.BINARY_EVENT || packet.type === PacketType.BINARY_ACK) { // binary packet's json this.reconstructor = new BinaryReconstructor(packet); // no attachments, labeled binary but no binary data to follow if (packet.attachments === 0) { super.emit("decoded", packet); } } else { // non-binary full packet super.emit("decoded", packet); } } else if (is_binary_1.isBinary(obj) || obj.base64) { // raw binary data if (!this.reconstructor) { throw new Error("got binary data when not reconstructing a packet"); } else { packet = this.reconstructor.takeBinaryData(obj); if (packet) { // received final buffer this.reconstructor = null; super.emit("decoded", packet); } } } else { throw new Error("Unknown type: " + obj); } } /** * Decode a packet String (JSON data) * * @param {String} str * @return {Object} packet */ decodeString(str) { let i = 0; // look up type const p = { type: Number(str.charAt(0)), }; if (PacketType[p.type] === undefined) { throw new Error("unknown packet type " + p.type); } // look up attachments if type binary if (p.type === PacketType.BINARY_EVENT || p.type === PacketType.BINARY_ACK) { const start = i + 1; while (str.charAt(++i) !== "-" && i != str.length) { } const buf = str.substring(start, i); if (buf != Number(buf) || str.charAt(i) !== "-") { throw new Error("Illegal attachments"); } p.attachments = Number(buf); } // look up namespace (if any) if ("/" === str.charAt(i + 1)) { const start = i + 1; while (++i) { const c = str.charAt(i); if ("," === c) break; if (i === str.length) break; } p.nsp = str.substring(start, i); } else { p.nsp = "/"; } // look up id const next = str.charAt(i + 1); if ("" !== next && Number(next) == next) { const start = i + 1; while (++i) { const c = str.charAt(i); if (null == c || Number(c) != c) { --i; break; } if (i === str.length) break; } p.id = Number(str.substring(start, i + 1)); } // look up json data if (str.charAt(++i)) { const payload = tryParse(str.substr(i)); if (Decoder.isPayloadValid(p.type, payload)) { p.data = payload; } else { throw new Error("invalid payload"); } } return p; } static isPayloadValid(type, payload) { switch (type) { case PacketType.CONNECT: return typeof payload === "object"; case PacketType.DISCONNECT: return payload === undefined; case PacketType.CONNECT_ERROR: return typeof payload === "string" || typeof payload === "object"; case PacketType.EVENT: case PacketType.BINARY_EVENT: return Array.isArray(payload) && payload.length > 0; case PacketType.ACK: case PacketType.BINARY_ACK: return Array.isArray(payload); } } /** * Deallocates a parser's resources */ destroy() { if (this.reconstructor) { this.reconstructor.finishedReconstruction(); } } } exports.Decoder = Decoder; function tryParse(str) { try { return JSON.parse(str); } catch (e) { return false; } } /** * A manager of a binary event's 'buffer sequence'. Should * be constructed whenever a packet of type BINARY_EVENT is * decoded. * * @param {Object} packet * @return {BinaryReconstructor} initialized reconstructor */ class BinaryReconstructor { constructor(packet) { this.packet = packet; this.buffers = []; this.reconPack = packet; } /** * Method to be called when binary data received from connection * after a BINARY_EVENT packet. * * @param {Buffer | ArrayBuffer} binData - the raw binary data received * @return {null | Object} returns null if more binary data is expected or * a reconstructed packet object if all buffers have been received. */ takeBinaryData(binData) { this.buffers.push(binData); if (this.buffers.length === this.reconPack.attachments) { // done with buffer list const packet = binary_1.reconstructPacket(this.reconPack, this.buffers); this.finishedReconstruction(); return packet; } return null; } /** * Cleans up binary packet reconstruction variables. */ finishedReconstruction() { this.reconPack = null; this.buffers = []; } } ",
"/** * Parses an URI * * @author Steven Levithan <stevenlevithan.com> (MIT license) * @api private */ var re = /^(?:(?![^:@]+:[^:@\/]*@)(http|https|ws|wss):\/\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\/?#]*)(?::(\d*))?)(((\/(?:[^?#](?![^?#\/]*\.[^?#\/.]+(?:[?#]|$)))*\/?)?([^?#\/]*))(?:\?([^#]*))?(?:#(.*))?)/; var parts = [ 'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor' ]; module.exports = function parseuri(str) { var src = str, b = str.indexOf('['), e = str.indexOf(']'); if (b != -1 && e != -1) { str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length); } var m = re.exec(str || ''), uri = {}, i = 14; while (i--) { uri[parts[i]] = m[i] || ''; } if (b != -1 && e != -1) { uri.source = src; uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':'); uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':'); uri.ipv6uri = true; } uri.pathNames = pathNames(uri, uri['path']); uri.queryKey = queryKey(uri, uri['query']); return uri; }; function pathNames(obj, path) { var regx = /\/{2,9}/g, names = path.replace(regx, "/").split("/"); if (path.substr(0, 1) == '/' || path.length === 0) { names.splice(0, 1); } if (path.substr(path.length - 1, 1) == '/') { names.splice(names.length - 1, 1); } return names; } function queryKey(uri, query) { var data = {}; query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) { if ($1) { data[$1] = $2; } }); return data; } ",
""use strict"; Object.defineProperty(exports, "__esModule", { value: true }); exports.Manager = void 0; const eio = require("engine.io-client"); const socket_1 = require("./socket"); const Emitter = require("component-emitter"); const parser = require("socket.io-parser"); const on_1 = require("./on"); const Backoff = require("backo2"); class Manager extends Emitter { constructor(uri, opts) { super(); this.nsps = {}; this.subs = []; if (uri && "object" === typeof uri) { opts = uri; uri = undefined; } opts = opts || {}; opts.path = opts.path || "/socket.io"; this.opts = opts; this.reconnection(opts.reconnection !== false); this.reconnectionAttempts(opts.reconnectionAttempts || Infinity); this.reconnectionDelay(opts.reconnectionDelay || 1000); this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000); this.randomizationFactor(opts.randomizationFactor || 0.5); this.backoff = new Backoff({ min: this.reconnectionDelay(), max: this.reconnectionDelayMax(), jitter: this.randomizationFactor(), }); this.timeout(null == opts.timeout ? 20000 : opts.timeout); this._readyState = "closed"; this.uri = uri; const _parser = opts.parser || parser; this.encoder = new _parser.Encoder(); this.decoder = new _parser.Decoder(); this._autoConnect = opts.autoConnect !== false; if (this._autoConnect) this.open(); } reconnection(v) { if (!arguments.length) return this._reconnection; this._reconnection = !!v; return this; } reconnectionAttempts(v) { if (v === undefined) return this._reconnectionAttempts; this._reconnectionAttempts = v; return this; } reconnectionDelay(v) { var _a; if (v === undefined) return this._reconnectionDelay; this._reconnectionDelay = v; (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v); return this; } randomizationFactor(v) { var _a; if (v === undefined) return this._randomizationFactor; this._randomizationFactor = v; (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v); return this; } reconnectionDelayMax(v) { var _a; if (v === undefined) return this._reconnectionDelayMax; this._reconnectionDelayMax = v; (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v); return this; } timeout(v) { if (!arguments.length) return this._timeout; this._timeout = v; return this; } /** * Starts trying to reconnect if reconnection is enabled and we have not * started reconnecting yet * * @private */ maybeReconnectOnOpen() { // Only try to reconnect if it's the first time we're connecting if (!this._reconnecting && this._reconnection && this.backoff.attempts === 0) { // keeps reconnection from firing twice for the same reconnection loop this.reconnect(); } } /** * Sets the current transport `socket`. * * @param {Function} fn - optional, callback * @return self * @public */ open(fn) { if (~this._readyState.indexOf("open")) return this; this.engine = eio(this.uri, this.opts); const socket = this.engine; const self = this; this._readyState = "opening"; this.skipReconnect = false; // emit `open` const openSubDestroy = on_1.on(socket, "open", function () { self.onopen(); fn && fn(); }); // emit `error` const errorSub = on_1.on(socket, "error", (err) => { self.cleanup(); self._readyState = "closed"; super.emit("error", err); if (fn) { fn(err); } else { // Only do this if there is no fn to handle the error self.maybeReconnectOnOpen(); } }); if (false !== this._timeout) { const timeout = this._timeout; if (timeout === 0) { openSubDestroy(); // prevents a race condition with the 'open' event } // set timer const timer = setTimeout(() => { openSubDestroy(); socket.close(); socket.emit("error", new Error("timeout")); }, timeout); this.subs.push(function subDestroy() { clearTimeout(timer); }); } this.subs.push(openSubDestroy); this.subs.push(errorSub); return this; } /** * Alias for open() * * @return self * @public */ connect(fn) { return this.open(fn); } /** * Called upon transport open. * * @private */ onopen() { // clear old subs this.cleanup(); // mark as open this._readyState = "open"; super.emit("open"); // add new subs const socket = this.engine; this.subs.push(on_1.on(socket, "ping", this.onping.bind(this)), on_1.on(socket, "data", this.ondata.bind(this)), on_1.on(socket, "error", this.onerror.bind(this)), on_1.on(socket, "close", this.onclose.bind(this)), on_1.on(this.decoder, "decoded", this.ondecoded.bind(this))); } /** * Called upon a ping. * * @private */ onping() { super.emit("ping"); } /** * Called with data. * * @private */ ondata(data) { this.decoder.add(data); } /** * Called when parser fully decodes a packet. * * @private */ ondecoded(packet) { super.emit("packet", packet); } /** * Called upon socket error. * * @private */ onerror(err) { super.emit("error", err); } /** * Creates a new socket for the given `nsp`. * * @return {Socket} * @public */ socket(nsp, opts) { let socket = this.nsps[nsp]; if (!socket) { socket = new socket_1.Socket(this, nsp, opts); this.nsps[nsp] = socket; } return socket; } /** * Called upon a socket close. * * @param socket * @private */ _destroy(socket) { const nsps = Object.keys(this.nsps); for (const nsp of nsps) { const socket = this.nsps[nsp]; if (socket.active) { return; } } this._close(); } /** * Writes a packet. * * @param packet * @private */ _packet(packet) { const encodedPackets = this.encoder.encode(packet); for (let i = 0; i < encodedPackets.length; i++) { this.engine.write(encodedPackets[i], packet.options); } } /** * Clean up transport subscriptions and packet buffer. * * @private */ cleanup() { this.subs.forEach((subDestroy) => subDestroy()); this.subs.length = 0; this.decoder.destroy(); } /** * Close the current socket. * * @private */ _close() { this.skipReconnect = true; this._reconnecting = false; if ("opening" === this._readyState) { // `onclose` will not fire because // an open event never happened this.cleanup(); } this.backoff.reset(); this._readyState = "closed"; if (this.engine) this.engine.close(); } /** * Alias for close() * * @private */ disconnect() { return this._close(); } /** * Called upon engine close. * * @private */ onclose(reason) { this.cleanup(); this.backoff.reset(); this._readyState = "closed"; super.emit("close", reason); if (this._reconnection && !this.skipReconnect) { this.reconnect(); } } /** * Attempt a reconnection. * * @private */ reconnect() { if (this._reconnecting || this.skipReconnect) return this; const self = this; if (this.backoff.attempts >= this._reconnectionAttempts) { this.backoff.reset(); super.emit("reconnect_failed"); this._reconnecting = false; } else { const delay = this.backoff.duration(); this._reconnecting = true; const timer = setTimeout(() => { if (self.skipReconnect) return; super.emit("reconnect_attempt", self.backoff.attempts); // check again for the case socket closed in above events if (self.skipReconnect) return; self.open((err) => { if (err) { self._reconnecting = false; self.reconnect(); super.emit("reconnect_error", err); } else { self.onreconnect(); } }); }, delay); this.subs.push(function subDestroy() { clearTimeout(timer); }); } } /** * Called upon successful reconnect. * * @private */ onreconnect() { const attempt = this.backoff.attempts; this._reconnecting = false; this.backoff.reset(); super.emit("reconnect", attempt); } } exports.Manager = Manager; ",
"const XMLHttpRequest = require("xmlhttprequest-ssl"); const XHR = require("./polling-xhr"); const JSONP = require("./polling-jsonp"); const websocket = require("./websocket"); exports.polling = polling; exports.websocket = websocket; /** * Polling transport polymorphic constructor. * Decides on xhr vs jsonp based on feature detection. * * @api private */ function polling(opts) { let xhr; let xd = false; let xs = false; const jsonp = false !== opts.jsonp; if (typeof location !== "undefined") { const isSSL = "https:" === location.protocol; let port = location.port; // some user agents have empty `location.port` if (!port) { port = isSSL ? 443 : 80; } xd = opts.hostname !== location.hostname || port !== opts.port; xs = opts.secure !== isSSL; } opts.xdomain = xd; opts.xscheme = xs; xhr = new XMLHttpRequest(opts); if ("open" in xhr && !opts.forceJSONP) { return new XHR(opts); } else { if (!jsonp) throw new Error("JSONP disabled"); return new JSONP(opts); } } ",
"// browser shim for xmlhttprequest module const hasCORS = require("has-cors"); const globalThis = require("./globalThis"); module.exports = function(opts) { const xdomain = opts.xdomain; // scheme must be same when usign XDomainRequest // http://blogs.msdn.com/b/ieinternals/archive/2010/05/13/xdomainrequest-restrictions-limitations-and-workarounds.aspx const xscheme = opts.xscheme; // XDomainRequest has a flow of not sending cookie, therefore it should be disabled as a default. // https://github.com/Automattic/engine.io-client/pull/217 const enablesXDR = opts.enablesXDR; // XMLHttpRequest can be disabled on IE try { if ("undefined" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) { return new XMLHttpRequest(); } } catch (e) {} // Use XDomainRequest for IE8 if enablesXDR is true // because loading bar keeps flashing when using jsonp-polling // https://github.com/yujiosaka/socke.io-ie8-loading-example try { if ("undefined" !== typeof XDomainRequest && !xscheme && enablesXDR) { return new XDomainRequest(); } } catch (e) {} if (!xdomain) { try { return new globalThis[["Active"].concat("Object").join("X")]( "Microsoft.XMLHTTP" ); } catch (e) {} } }; ",
"const Transport = require("../transport"); const parseqs = require("parseqs"); const parser = require("engine.io-parser"); const yeast = require("yeast"); class Polling extends Transport { /** * Transport name. */ get name() { return "polling"; } /** * Opens the socket (triggers polling). We write a PING message to determine * when the transport is open. * * @api private */ doOpen() { this.poll(); } /** * Pauses polling. * * @param {Function} callback upon buffers are flushed and transport is paused * @api private */ pause(onPause) { const self = this; this.readyState = "pausing"; function pause() { self.readyState = "paused"; onPause(); } if (this.polling || !this.writable) { let total = 0; if (this.polling) { total++; this.once("pollComplete", function() { --total || pause(); }); } if (!this.writable) { total++; this.once("drain", function() { --total || pause(); }); } } else { pause(); } } /** * Starts polling cycle. * * @api public */ poll() { this.polling = true; this.doPoll(); this.emit("poll"); } /** * Overloads onData to detect payloads. * * @api private */ onData(data) { const self = this; const callback = function(packet, index, total) { // if its the first message we consider the transport open if ("opening" === self.readyState && packet.type === "open") { self.onOpen(); } // if its a close packet, we close the ongoing requests if ("close" === packet.type) { self.onClose(); return false; } // otherwise bypass onData and handle the message self.onPacket(packet); }; // decode payload parser.decodePayload(data, this.socket.binaryType).forEach(callback); // if an event did not trigger closing if ("closed" !== this.readyState) { // if we got data we're not polling this.polling = false; this.emit("pollComplete"); if ("open" === this.readyState) { this.poll(); } else { } } } /** * For polling, send a close packet. * * @api private */ doClose() { const self = this; function close() { self.write([{ type: "close" }]); } if ("open" === this.readyState) { close(); } else { // in case we're trying to close while // handshaking is in progress (GH-164) this.once("open", close); } } /** * Writes a packets payload. * * @param {Array} data packets * @param {Function} drain callback * @api private */ write(packets) { this.writable = false; parser.encodePayload(packets, data => { this.doWrite(data, () => { this.writable = true; this.emit("drain"); }); }); } /** * Generates uri for connection. * * @api private */ uri() { let query = this.query || {}; const schema = this.opts.secure ? "https" : "http"; let port = ""; // cache busting is forced if (false !== this.opts.timestampRequests) { query[this.opts.timestampParam] = yeast(); } if (!this.supportsBinary && !query.sid) { query.b64 = 1; } query = parseqs.encode(query); // avoid port if default for schema if ( this.opts.port && (("https" === schema && Number(this.opts.port) !== 443) || ("http" === schema && Number(this.opts.port) !== 80)) ) { port = ":" + this.opts.port; } // prepend ? to query if (query.length) { query = "?" + query; } const ipv6 = this.opts.hostname.indexOf(":") !== -1; return ( schema + "://" + (ipv6 ? "[" + this.opts.hostname + "]" : this.opts.hostname) + port + this.opts.path + query ); } } module.exports = Polling; ",
"const PACKET_TYPES = Object.create(null); // no Map = no polyfill PACKET_TYPES["open"] = "0"; PACKET_TYPES["close"] = "1"; PACKET_TYPES["ping"] = "2"; PACKET_TYPES["pong"] = "3"; PACKET_TYPES["message"] = "4"; PACKET_TYPES["upgrade"] = "5"; PACKET_TYPES["noop"] = "6"; const PACKET_TYPES_REVERSE = Object.create(null); Object.keys(PACKET_TYPES).forEach(key => { PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key; }); const ERROR_PACKET = { type: "error", data: "parser error" }; module.exports = { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET }; ",
"'use strict'; var alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split('') , length = 64 , map = {} , seed = 0 , i = 0 , prev; /** * Return a string representing the specified number. * * @param {Number} num The number to convert. * @returns {String} The string representation of the number. * @api public */ function encode(num) { var encoded = ''; do { encoded = alphabet[num % length] + encoded; num = Math.floor(num / length); } while (num > 0); return encoded; } /** * Return the integer value specified by the given string. * * @param {String} str The string to convert. * @returns {Number} The integer value represented by the string. * @api public */ function decode(str) { var decoded = 0; for (i = 0; i < str.length; i++) { decoded = decoded * length + map[str.charAt(i)]; } return decoded; } /** * Yeast: A tiny growing id generator. * * @returns {String} A unique id. * @api public */ function yeast() { var now = encode(+new Date()); if (now !== prev) return seed = 0, prev = now; return now +'.'+ encode(seed++); } // // Map each character to its index. // for (; i < length; i++) map[alphabet[i]] = i; // // Expose the `yeast`, `encode` and `decode` functions. // yeast.encode = encode; yeast.decode = decode; module.exports = yeast; ",
"module.exports.pick = (obj, ...attr) => { return attr.reduce((acc, k) => { if (obj.hasOwnProperty(k)) { acc[k] = obj[k]; } return acc; }, {}); }; ",
""use strict"; Object.defineProperty(exports, "__esModule", { value: true }); exports.Socket = void 0; const socket_io_parser_1 = require("socket.io-parser"); const Emitter = require("component-emitter"); const on_1 = require("./on"); /** * Internal events. * These events can't be emitted by the user. */ const RESERVED_EVENTS = Object.freeze({ connect: 1, connect_error: 1, disconnect: 1, disconnecting: 1, // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener newListener: 1, removeListener: 1, }); class Socket extends Emitter { /** * `Socket` constructor. * * @public */ constructor(io, nsp, opts) { super(); this.receiveBuffer = []; this.sendBuffer = []; this.ids = 0; this.acks = {}; this.flags = {}; this.io = io; this.nsp = nsp; this.ids = 0; this.acks = {}; this.receiveBuffer = []; this.sendBuffer = []; this.connected = false; this.disconnected = true; this.flags = {}; if (opts && opts.auth) { this.auth = opts.auth; } if (this.io._autoConnect) this.open(); } /** * Subscribe to open, close and packet events * * @private */ subEvents() { if (this.subs) return; const io = this.io; this.subs = [ on_1.on(io, "open", this.onopen.bind(this)), on_1.on(io, "packet", this.onpacket.bind(this)), on_1.on(io, "error", this.onerror.bind(this)), on_1.on(io, "close", this.onclose.bind(this)), ]; } /** * Whether the Socket will try to reconnect when its Manager connects or reconnects */ get active() { return !!this.subs; } /** * "Opens" the socket. * * @public */ connect() { if (this.connected) return this; this.subEvents(); if (!this.io["_reconnecting"]) this.io.open(); // ensure open if ("open" === this.io._readyState) this.onopen(); return this; } /** * Alias for connect() */ open() { return this.connect(); } /** * Sends a `message` event. * * @return self * @public */ send(...args) { args.unshift("message"); this.emit.apply(this, args); return this; } /** * Override `emit`. * If the event is in `events`, it's emitted normally. * * @param ev - event name * @return self * @public */ emit(ev, ...args) { if (RESERVED_EVENTS.hasOwnProperty(ev)) { throw new Error('"' + ev + '" is a reserved event name'); } args.unshift(ev); const packet = { type: socket_io_parser_1.PacketType.EVENT, data: args, }; packet.options = {}; packet.options.compress = this.flags.compress !== false; // event ack callback if ("function" === typeof args[args.length - 1]) { this.acks[this.ids] = args.pop(); packet.id = this.ids++; } const isTransportWritable = this.io.engine && this.io.engine.transport && this.io.engine.transport.writable; const discardPacket = this.flags.volatile && (!isTransportWritable || !this.connected); if (discardPacket) { } else if (this.connected) { this.packet(packet); } else { this.sendBuffer.push(packet); } this.flags = {}; return this; } /** * Sends a packet. * * @param packet * @private */ packet(packet) { packet.nsp = this.nsp; this.io._packet(packet); } /** * Called upon engine `open`. * * @private */ onopen() { if (typeof this.auth == "function") { this.auth((data) => { this.packet({ type: socket_io_parser_1.PacketType.CONNECT, data }); }); } else { this.packet({ type: socket_io_parser_1.PacketType.CONNECT, data: this.auth }); } } /** * Called upon engine or manager `error`. * * @param err * @private */ onerror(err) { if (!this.connected) { super.emit("connect_error", err); } } /** * Called upon engine `close`. * * @param reason * @private */ onclose(reason) { this.connected = false; this.disconnected = true; delete this.id; super.emit("disconnect", reason); } /** * Called with socket packet. * * @param packet * @private */ onpacket(packet) { const sameNamespace = packet.nsp === this.nsp; if (!sameNamespace) return; switch (packet.type) { case socket_io_parser_1.PacketType.CONNECT: if (packet.data && packet.data.sid) { const id = packet.data.sid; this.onconnect(id); } else { super.emit("connect_error", new Error("It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)")); } break; case socket_io_parser_1.PacketType.EVENT: this.onevent(packet); break; case socket_io_parser_1.PacketType.BINARY_EVENT: this.onevent(packet); break; case socket_io_parser_1.PacketType.ACK: this.onack(packet); break; case socket_io_parser_1.PacketType.BINARY_ACK: this.onack(packet); break; case socket_io_parser_1.PacketType.DISCONNECT: this.ondisconnect(); break; case socket_io_parser_1.PacketType.CONNECT_ERROR: const err = new Error(packet.data.message); // @ts-ignore err.data = packet.data.data; super.emit("connect_error", err); break; } } /** * Called upon a server event. * * @param packet * @private */ onevent(packet) { const args = packet.data || []; if (null != packet.id) { args.push(this.ack(packet.id)); } if (this.connected) { this.emitEvent(args); } else { this.receiveBuffer.push(Object.freeze(args)); } } emitEvent(args) { if (this._anyListeners && this._anyListeners.length) { const listeners = this._anyListeners.slice(); for (const listener of listeners) { listener.apply(this, args); } } super.emit.apply(this, args); } /** * Produces an ack callback to emit with an event. * * @private */ ack(id) { const self = this; let sent = false; return function (...args) { // prevent double callbacks if (sent) return; sent = true; self.packet({ type: socket_io_parser_1.PacketType.ACK, id: id, data: args, }); }; } /** * Called upon a server acknowlegement. * * @param packet * @private */ onack(packet) { const ack = this.acks[packet.id]; if ("function" === typeof ack) { ack.apply(this, packet.data); delete this.acks[packet.id]; } else { } } /** * Called upon server connect. * * @private */ onconnect(id) { this.id = id; this.connected = true; this.disconnected = false; super.emit("connect"); this.emitBuffered(); } /** * Emit buffered events (received and emitted). * * @private */ emitBuffered() { this.receiveBuffer.forEach((args) => this.emitEvent(args)); this.receiveBuffer = []; this.sendBuffer.forEach((packet) => this.packet(packet)); this.sendBuffer = []; } /** * Called upon server disconnect. * * @private */ ondisconnect() { this.destroy(); this.onclose("io server disconnect"); } /** * Called upon forced client/server side disconnections, * this method ensures the manager stops tracking us and * that reconnections don't get triggered for this. * * @private */ destroy() { if (this.subs) { // clean subscriptions to avoid reconnections this.subs.forEach((subDestroy) => subDestroy()); this.subs = undefined; } this.io["_destroy"](this); } /** * Disconnects the socket manually. * * @return self * @public */ disconnect() { if (this.connected) { this.packet({ type: socket_io_parser_1.PacketType.DISCONNECT }); } // remove socket from pool this.destroy(); if (this.connected) { // fire events this.onclose("io client disconnect"); } return this; } /** * Alias for disconnect() * * @return self * @public */ close() { return this.disconnect(); } /** * Sets the compress flag. * * @param compress - if `true`, compresses the sending data * @return self * @public */ compress(compress) { this.flags.compress = compress; return this; } /** * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not * ready to send messages. * * @returns self * @public */ get volatile() { this.flags.volatile = true; return this; } /** * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the * callback. * * @param listener * @public */ onAny(listener) { this._anyListeners = this._anyListeners || []; this._anyListeners.push(listener); return this; } /** * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the * callback. The listener is added to the beginning of the listeners array. * * @param listener * @public */ prependAny(listener) { this._anyListeners = this._anyListeners || []; this._anyListeners.unshift(listener); return this; } /** * Removes the listener that will be fired when any event is emitted. * * @param listener * @public */ offAny(listener) { if (!this._anyListeners) { return this; } if (listener) { const listeners = this._anyListeners; for (let i = 0; i < listeners.length; i++) { if (listener === listeners[i]) { listeners.splice(i, 1); return this; } } } else { this._anyListeners = []; } return this; } /** * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated, * e.g. to remove listeners. * * @public */ listenersAny() { return this._anyListeners || []; } } exports.Socket = Socket; ",
""use strict"; Object.defineProperty(exports, "__esModule", { value: true }); exports.hasBinary = exports.isBinary = void 0; const withNativeArrayBuffer = typeof ArrayBuffer === "function"; const isView = (obj) => { return typeof ArrayBuffer.isView === "function" ? ArrayBuffer.isView(obj) : obj.buffer instanceof ArrayBuffer; }; const toString = Object.prototype.toString; const withNativeBlob = typeof Blob === "function" || (typeof Blob !== "undefined" && toString.call(Blob) === "[object BlobConstructor]"); const withNativeFile = typeof File === "function" || (typeof File !== "undefined" && toString.call(File) === "[object FileConstructor]"); /** * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File. * * @private */ function isBinary(obj) { return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) || (withNativeBlob && obj instanceof Blob) || (withNativeFile && obj instanceof File)); } exports.isBinary = isBinary; function hasBinary(obj, toJSON) { if (!obj || typeof obj !== "object") { return false; } if (Array.isArray(obj)) { for (let i = 0, l = obj.length; i < l; i++) { if (hasBinary(obj[i])) { return true; } } return false; } if (isBinary(obj)) { return true; } if (obj.toJSON && typeof obj.toJSON === "function" && arguments.length === 1) { return hasBinary(obj.toJSON(), true); } for (const key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) { return true; } } return false; } exports.hasBinary = hasBinary; ",
""use strict"; Object.defineProperty(exports, "__esModule", { value: true }); exports.on = void 0; function on(obj, ev, fn) { obj.on(ev, fn); return function subDestroy() { obj.off(ev, fn); }; } exports.on = on; ",
""use strict"; Object.defineProperty(exports, "__esModule", { value: true }); exports.Socket = exports.io = exports.Manager = exports.protocol = void 0; const url_1 = require("./url"); const manager_1 = require("./manager"); const socket_1 = require("./socket"); Object.defineProperty(exports, "Socket", { enumerable: true, get: function () { return socket_1.Socket; } }); /** * Module exports. */ module.exports = exports = lookup; /** * Managers cache. */ const cache = (exports.managers = {}); function lookup(uri, opts) { if (typeof uri === "object") { opts = uri; uri = undefined; } opts = opts || {}; const parsed = url_1.url(uri, opts.path); const source = parsed.source; const id = parsed.id; const path = parsed.path; const sameNamespace = cache[id] && path in cache[id]["nsps"]; const newConnection = opts.forceNew || opts["force new connection"] || false === opts.multiplex || sameNamespace; let io; if (newConnection) { io = new manager_1.Manager(source, opts); } else { if (!cache[id]) { cache[id] = new manager_1.Manager(source, opts); } io = cache[id]; } if (parsed.query && !opts.query) { opts.query = parsed.queryKey; } return io.socket(parsed.path, opts); } exports.io = lookup; /** * Protocol version. * * @public */ var socket_io_parser_1 = require("socket.io-parser"); Object.defineProperty(exports, "protocol", { enumerable: true, get: function () { return socket_io_parser_1.protocol; } }); /** * `connect`. * * @param {String} uri * @public */ exports.connect = lookup; /** * Expose constructors for standalone build. * * @public */ var manager_2 = require("./manager"); Object.defineProperty(exports, "Manager", { enumerable: true, get: function () { return manager_2.Manager; } }); ",
""use strict"; Object.defineProperty(exports, "__esModule", { value: true }); exports.url = void 0; const parseuri = require("parseuri"); /** * URL parser. * * @param uri - url * @param path - the request path of the connection * @param loc - An object meant to mimic window.location. * Defaults to window.location. * @public */ function url(uri, path = "", loc) { let obj = uri; // default to window.location loc = loc || (typeof location !== "undefined" && location); if (null == uri) uri = loc.protocol + "//" + loc.host; // relative path support if (typeof uri === "string") { if ("/" === uri.charAt(0)) { if ("/" === uri.charAt(1)) { uri = loc.protocol + uri; } else { uri = loc.host + uri; } } if (!/^(https?|wss?):\/\//.test(uri)) { if ("undefined" !== typeof loc) { uri = loc.protocol + "//" + uri; } else { uri = "https://" + uri; } } // parse obj = parseuri(uri); } // make sure we treat `localhost:80` and `localhost` equally if (!obj.port) { if (/^(http|ws)$/.test(obj.protocol)) { obj.port = "80"; } else if (/^(http|ws)s$/.test(obj.protocol)) { obj.port = "443"; } } obj.path = obj.path || "/"; const ipv6 = obj.host.indexOf(":") !== -1; const host = ipv6 ? "[" + obj.host + "]" : obj.host; // define unique id obj.id = obj.protocol + "://" + host + ":" + obj.port + path; // define href obj.href = obj.protocol + "://" + host + (loc && loc.port === obj.port ? "" : ":" + obj.port); return obj; } exports.url = url; ",
"const Socket = require("./socket"); module.exports = (uri, opts) => new Socket(uri, opts); /** * Expose deps for legacy compatibility * and standalone browser access. */ module.exports.Socket = Socket; module.exports.protocol = Socket.protocol; // this is an int module.exports.Transport = require("./transport"); module.exports.transports = require("./transports/index"); module.exports.parser = require("engine.io-parser"); ",
"const transports = require("./transports/index"); const Emitter = require("component-emitter"); const parser = require("engine.io-parser"); const parseuri = require("parseuri"); const parseqs = require("parseqs"); class Socket extends Emitter { /** * Socket constructor. * * @param {String|Object} uri or options * @param {Object} options * @api public */ constructor(uri, opts = {}) { super(); if (uri && "object" === typeof uri) { opts = uri; uri = null; } if (uri) { uri = parseuri(uri); opts.hostname = uri.host; opts.secure = uri.protocol === "https" || uri.protocol === "wss"; opts.port = uri.port; if (uri.query) opts.query = uri.query; } else if (opts.host) { opts.hostname = parseuri(opts.host).host; } this.secure = null != opts.secure ? opts.secure : typeof location !== "undefined" && "https:" === location.protocol; if (opts.hostname && !opts.port) { // if no port is specified manually, use the protocol default opts.port = this.secure ? "443" : "80"; } this.hostname = opts.hostname || (typeof location !== "undefined" ? location.hostname : "localhost"); this.port = opts.port || (typeof location !== "undefined" && location.port ? location.port : this.secure ? 443 : 80); this.transports = opts.transports || ["polling", "websocket"]; this.readyState = ""; this.writeBuffer = []; this.prevBufferLen = 0; this.opts = Object.assign( { path: "/engine.io", agent: false, withCredentials: false, upgrade: true, jsonp: true, timestampParam: "t", rememberUpgrade: false, rejectUnauthorized: true, perMessageDeflate: { threshold: 1024 }, transportOptions: {} }, opts ); this.opts.path = this.opts.path.replace(/\/$/, "") + "/"; if (typeof this.opts.query === "string") { this.opts.query = parseqs.decode(this.opts.query); } // set on handshake this.id = null; this.upgrades = null; this.pingInterval = null; this.pingTimeout = null; // set on heartbeat this.pingTimeoutTimer = null; if (typeof addEventListener === "function") { addEventListener( "beforeunload", () => { if (this.transport) { // silently close the transport this.transport.removeAllListeners(); this.transport.close(); } }, false ); } this.open(); } /** * Creates transport of the given type. * * @param {String} transport name * @return {Transport} * @api private */ createTransport(name) { const query = clone(this.opts.query); // append engine.io protocol identifier query.EIO = parser.protocol; // transport name query.transport = name; // session id if we already have one if (this.id) query.sid = this.id; const opts = Object.assign( {}, this.opts.transportOptions[name], this.opts, { query, socket: this, hostname: this.hostname, secure: this.secure, port: this.port } ); return new transports[name](opts); } /** * Initializes transport to use and starts probe. * * @api private */ open() { let transport; if ( this.opts.rememberUpgrade && Socket.priorWebsocketSuccess && this.transports.indexOf("websocket") !== -1 ) { transport = "websocket"; } else if (0 === this.transports.length) { // Emit error on next tick so it can be listened to const self = this; setTimeout(function() { self.emit("error", "No transports available"); }, 0); return; } else { transport = this.transports[0]; } this.readyState = "opening"; // Retry with the next transport if the transport is disabled (jsonp: false) try { transport = this.createTransport(transport); } catch (e) { this.transports.shift(); this.open(); return; } transport.open(); this.setTransport(transport); } /** * Sets the current transport. Disables the existing one (if any). * * @api private */ setTransport(transport) { const self = this; if (this.transport) { this.transport.removeAllListeners(); } // set up transport this.transport = transport; // set up transport listeners transport .on("drain", function() { self.onDrain(); }) .on("packet", function(packet) { self.onPacket(packet); }) .on("error", function(e) { self.onError(e); }) .on("close", function() { self.onClose("transport close"); }); } /** * Probes a transport. * * @param {String} transport name * @api private */ probe(name) { let transport = this.createTransport(name, { probe: 1 }); let failed = false; const self = this; Socket.priorWebsocketSuccess = false; function onTransportOpen() { if (self.onlyBinaryUpgrades) { const upgradeLosesBinary = !this.supportsBinary && self.transport.supportsBinary; failed = failed || upgradeLosesBinary; } if (failed) return; transport.send([{ type: "ping", data: "probe" }]); transport.once("packet", function(msg) { if (failed) return; if ("pong" === msg.type && "probe" === msg.data) { self.upgrading = true; self.emit("upgrading", transport); if (!transport) return; Socket.priorWebsocketSuccess = "websocket" === transport.name; self.transport.pause(function() { if (failed) return; if ("closed" === self.readyState) return; cleanup(); self.setTransport(transport); transport.send([{ type: "upgrade" }]); self.emit("upgrade", transport); transport = null; self.upgrading = false; self.flush(); }); } else { const err = new Error("probe error"); err.transport = transport.name; self.emit("upgradeError", err); } }); } function freezeTransport() { if (failed) return; // Any callback called by transport should be ignored since now failed = true; cleanup(); transport.close(); transport = null; } // Handle any error that happens while probing function onerror(err) { const error = new Error("probe error: " + err); error.transport = transport.name; freezeTransport(); self.emit("upgradeError", error); } function onTransportClose() { onerror("transport closed"); } // When the socket is closed while we're probing function onclose() { onerror("socket closed"); } // When the socket is upgraded while we're probing function onupgrade(to) { if (transport && to.name !== transport.name) { freezeTransport(); } } // Remove all listeners on the transport and on self function cleanup() { transport.removeListener("open", onTransportOpen); transport.removeListener("error", onerror); transport.removeListener("close", onTransportClose); self.removeListener("close", onclose); self.removeListener("upgrading", onupgrade); } transport.once("open", onTransportOpen); transport.once("error", onerror); transport.once("close", onTransportClose); this.once("close", onclose); this.once("upgrading", onupgrade); transport.open(); } /** * Called when connection is deemed open. * * @api public */ onOpen() { this.readyState = "open"; Socket.priorWebsocketSuccess = "websocket" === this.transport.name; this.emit("open"); this.flush(); // we check for `readyState` in case an `open` // listener already closed the socket if ( "open" === this.readyState && this.opts.upgrade && this.transport.pause ) { let i = 0; const l = this.upgrades.length; for (; i < l; i++) { this.probe(this.upgrades[i]); } } } /** * Handles a packet. * * @api private */ onPacket(packet) { if ( "opening" === this.readyState || "open" === this.readyState || "closing" === this.readyState ) { this.emit("packet", packet); // Socket is live - any packet counts this.emit("heartbeat"); switch (packet.type) { case "open": this.onHandshake(JSON.parse(packet.data)); break; case "ping": this.resetPingTimeout(); this.sendPacket("pong"); this.emit("pong"); break; case "error": const err = new Error("server error"); err.code = packet.data; this.onError(err); break; case "message": this.emit("data", packet.data); this.emit("message", packet.data); break; } } else { } } /** * Called upon handshake completion. * * @param {Object} handshake obj * @api private */ onHandshake(data) { this.emit("handshake", data); this.id = data.sid; this.transport.query.sid = data.sid; this.upgrades = this.filterUpgrades(data.upgrades); this.pingInterval = data.pingInterval; this.pingTimeout = data.pingTimeout; this.onOpen(); // In case open handler closes socket if ("closed" === this.readyState) return; this.resetPingTimeout(); } /** * Sets and resets ping timeout timer based on server pings. * * @api private */ resetPingTimeout() { clearTimeout(this.pingTimeoutTimer); this.pingTimeoutTimer = setTimeout(() => { this.onClose("ping timeout"); }, this.pingInterval + this.pingTimeout); } /** * Called on `drain` event * * @api private */ onDrain() { this.writeBuffer.splice(0, this.prevBufferLen); // setting prevBufferLen = 0 is very important // for example, when upgrading, upgrade packet is sent over, // and a nonzero prevBufferLen could cause problems on `drain` this.prevBufferLen = 0; if (0 === this.writeBuffer.length) { this.emit("drain"); } else { this.flush(); } } /** * Flush write buffers. * * @api private */ flush() { if ( "closed" !== this.readyState && this.transport.writable && !this.upgrading && this.writeBuffer.length ) { this.transport.send(this.writeBuffer); // keep track of current length of writeBuffer // splice writeBuffer and callbackBuffer on `drain` this.prevBufferLen = this.writeBuffer.length; this.emit("flush"); } } /** * Sends a message. * * @param {String} message. * @param {Function} callback function. * @param {Object} options. * @return {Socket} for chaining. * @api public */ write(msg, options, fn) { this.sendPacket("message", msg, options, fn); return this; } send(msg, options, fn) { this.sendPacket("message", msg, options, fn); return this; } /** * Sends a packet. * * @param {String} packet type. * @param {String} data. * @param {Object} options. * @param {Function} callback function. * @api private */ sendPacket(type, data, options, fn) { if ("function" === typeof data) { fn = data; data = undefined; } if ("function" === typeof options) { fn = options; options = null; } if ("closing" === this.readyState || "closed" === this.readyState) { return; } options = options || {}; options.compress = false !== options.compress; const packet = { type: type, data: data, options: options }; this.emit("packetCreate", packet); this.writeBuffer.push(packet); if (fn) this.once("flush", fn); this.flush(); } /** * Closes the connection. * * @api private */ close() { const self = this; if ("opening" === this.readyState || "open" === this.readyState) { this.readyState = "closing"; if (this.writeBuffer.length) { this.once("drain", function() { if (this.upgrading) { waitForUpgrade(); } else { close(); } }); } else if (this.upgrading) { waitForUpgrade(); } else { close(); } } function close() { self.onClose("forced close"); self.transport.close(); } function cleanupAndClose() { self.removeListener("upgrade", cleanupAndClose); self.removeListener("upgradeError", cleanupAndClose); close(); } function waitForUpgrade() { // wait for upgrade to finish since we can't send packets while pausing a transport self.once("upgrade", cleanupAndClose); self.once("upgradeError", cleanupAndClose); } return this; } /** * Called upon transport error * * @api private */ onError(err) { Socket.priorWebsocketSuccess = false; this.emit("error", err); this.onClose("transport error", err); } /** * Called upon transport close. * * @api private */ onClose(reason, desc) { if ( "opening" === this.readyState || "open" === this.readyState || "closing" === this.readyState ) { const self = this; // clear timers clearTimeout(this.pingIntervalTimer); clearTimeout(this.pingTimeoutTimer); // stop event from firing again for transport this.transport.removeAllListeners("close"); // ensure transport won't stay open this.transport.close(); // ignore further transport communication this.transport.removeAllListeners(); // set ready state this.readyState = "closed"; // clear session id this.id = null; // emit close event this.emit("close", reason, desc); // clean buffers after, so users can still // grab the buffers on `close` event self.writeBuffer = []; self.prevBufferLen = 0; } } /** * Filters upgrades, returning only those matching client transports. * * @param {Array} server upgrades * @api private * */ filterUpgrades(upgrades) { const filteredUpgrades = []; let i = 0; const j = upgrades.length; for (; i < j; i++) { if (~this.transports.indexOf(upgrades[i])) filteredUpgrades.push(upgrades[i]); } return filteredUpgrades; } } Socket.priorWebsocketSuccess = false; /** * Protocol version. * * @api public */ Socket.protocol = parser.protocol; // this is an int function clone(obj) { const o = {}; for (let i in obj) { if (obj.hasOwnProperty(i)) { o[i] = obj[i]; } } return o; } module.exports = Socket; ",
" /** * Module exports. * * Logic borrowed from Modernizr: * * - https://github.com/Modernizr/Modernizr/blob/master/feature-detects/cors.js */ try { module.exports = typeof XMLHttpRequest !== 'undefined' && 'withCredentials' in new XMLHttpRequest(); } catch (err) { // if XMLHttp support is disabled in IE then it will throw // when trying to create module.exports = false; } ",
"/* global attachEvent */ const XMLHttpRequest = require("xmlhttprequest-ssl"); const Polling = require("./polling"); const Emitter = require("component-emitter"); const { pick } = require("../util"); const globalThis = require("../globalThis"); /** * Empty function */ function empty() {} const hasXHR2 = (function() { const xhr = new XMLHttpRequest({ xdomain: false }); return null != xhr.responseType; })(); class XHR extends Polling { /** * XHR Polling constructor. * * @param {Object} opts * @api public */ constructor(opts) { super(opts); if (typeof location !== "undefined") { const isSSL = "https:" === location.protocol; let port = location.port; // some user agents have empty `location.port` if (!port) { port = isSSL ? 443 : 80; } this.xd = (typeof location !== "undefined" && opts.hostname !== location.hostname) || port !== opts.port; this.xs = opts.secure !== isSSL; } /** * XHR supports binary */ const forceBase64 = opts && opts.forceBase64; this.supportsBinary = hasXHR2 && !forceBase64; } /** * Creates a request. * * @param {String} method * @api private */ request(opts = {}) { Object.assign(opts, { xd: this.xd, xs: this.xs }, this.opts); return new Request(this.uri(), opts); } /** * Sends data. * * @param {String} data to send. * @param {Function} called upon flush. * @api private */ doWrite(data, fn) { const req = this.request({ method: "POST", data: data }); const self = this; req.on("success", fn); req.on("error", function(err) { self.onError("xhr post error", err); }); } /** * Starts a poll cycle. * * @api private */ doPoll() { const req = this.request(); const self = this; req.on("data", function(data) { self.onData(data); }); req.on("error", function(err) { self.onError("xhr poll error", err); }); this.pollXhr = req; } } class Request extends Emitter { /** * Request constructor * * @param {Object} options * @api public */ constructor(uri, opts) { super(); this.opts = opts; this.method = opts.method || "GET"; this.uri = uri; this.async = false !== opts.async; this.data = undefined !== opts.data ? opts.data : null; this.create(); } /** * Creates the XHR object and sends the request. * * @api private */ create() { const opts = pick( this.opts, "agent", "enablesXDR", "pfx", "key", "passphrase", "cert", "ca", "ciphers", "rejectUnauthorized" ); opts.xdomain = !!this.opts.xd; opts.xscheme = !!this.opts.xs; const xhr = (this.xhr = new XMLHttpRequest(opts)); const self = this; try { xhr.open(this.method, this.uri, this.async); try { if (this.opts.extraHeaders) { xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true); for (let i in this.opts.extraHeaders) { if (this.opts.extraHeaders.hasOwnProperty(i)) { xhr.setRequestHeader(i, this.opts.extraHeaders[i]); } } } } catch (e) {} if ("POST" === this.method) { try { xhr.setRequestHeader("Content-type", "text/plain;charset=UTF-8"); } catch (e) {} } try { xhr.setRequestHeader("Accept", "*/*"); } catch (e) {} // ie6 check if ("withCredentials" in xhr) { xhr.withCredentials = this.opts.withCredentials; } if (this.opts.requestTimeout) { xhr.timeout = this.opts.requestTimeout; } if (this.hasXDR()) { xhr.onload = function() { self.onLoad(); }; xhr.onerror = function() { self.onError(xhr.responseText); }; } else { xhr.onreadystatechange = function() { if (4 !== xhr.readyState) return; if (200 === xhr.status || 1223 === xhr.status) { self.onLoad(); } else { // make sure the `error` event handler that's user-set // does not throw in the same tick and gets caught here setTimeout(function() { self.onError(typeof xhr.status === "number" ? xhr.status : 0); }, 0); } }; } xhr.send(this.data); } catch (e) { // Need to defer since .create() is called directly from the constructor // and thus the 'error' event can only be only bound *after* this exception // occurs. Therefore, also, we cannot throw here at all. setTimeout(function() { self.onError(e); }, 0); return; } if (typeof document !== "undefined") { this.index = Request.requestsCount++; Request.requests[this.index] = this; } } /** * Called upon successful response. * * @api private */ onSuccess() { this.emit("success"); this.cleanup(); } /** * Called if we have data. * * @api private */ onData(data) { this.emit("data", data); this.onSuccess(); } /** * Called upon error. * * @api private */ onError(err) { this.emit("error", err); this.cleanup(true); } /** * Cleans up house. * * @api private */ cleanup(fromError) { if ("undefined" === typeof this.xhr || null === this.xhr) { return; } // xmlhttprequest if (this.hasXDR()) { this.xhr.onload = this.xhr.onerror = empty; } else { this.xhr.onreadystatechange = empty; } if (fromError) { try { this.xhr.abort(); } catch (e) {} } if (typeof document !== "undefined") { delete Request.requests[this.index]; } this.xhr = null; } /** * Called upon load. * * @api private */ onLoad() { const data = this.xhr.responseText; if (data !== null) { this.onData(data); } } /** * Check if it has XDomainRequest. * * @api private */ hasXDR() { return typeof XDomainRequest !== "undefined" && !this.xs && this.enablesXDR; } /** * Aborts the request. * * @api public */ abort() { this.cleanup(); } } /** * Aborts pending requests when unloading the window. This is needed to prevent * memory leaks (e.g. when using IE) and to ensure that no spurious error is * emitted. */ Request.requestsCount = 0; Request.requests = {}; if (typeof document !== "undefined") { if (typeof attachEvent === "function") { attachEvent("onunload", unloadHandler); } else if (typeof addEventListener === "function") { const terminationEvent = "onpagehide" in globalThis ? "pagehide" : "unload"; addEventListener(terminationEvent, unloadHandler, false); } } function unloadHandler() { for (let i in Request.requests) { if (Request.requests.hasOwnProperty(i)) { Request.requests[i].abort(); } } } module.exports = XHR; module.exports.Request = Request; ",
"const { PACKET_TYPES } = require("./commons"); const withNativeBlob = typeof Blob === "function" || (typeof Blob !== "undefined" && Object.prototype.toString.call(Blob) === "[object BlobConstructor]"); const withNativeArrayBuffer = typeof ArrayBuffer === "function"; // ArrayBuffer.isView method is not defined in IE10 const isView = obj => { return typeof ArrayBuffer.isView === "function" ? ArrayBuffer.isView(obj) : obj && obj.buffer instanceof ArrayBuffer; }; const encodePacket = ({ type, data }, supportsBinary, callback) => { if (withNativeBlob && data instanceof Blob) { if (supportsBinary) { return callback(data); } else { return encodeBlobAsBase64(data, callback); } } else if ( withNativeArrayBuffer && (data instanceof ArrayBuffer || isView(data)) ) { if (supportsBinary) { return callback(data instanceof ArrayBuffer ? data : data.buffer); } else { return encodeBlobAsBase64(new Blob([data]), callback); } } // plain string return callback(PACKET_TYPES[type] + (data || "")); }; const encodeBlobAsBase64 = (data, callback) => { const fileReader = new FileReader(); fileReader.onload = function() { const content = fileReader.result.split(",")[1]; callback("b" + content); }; return fileReader.readAsDataURL(data); }; module.exports = encodePacket; ",
"const { PACKET_TYPES_REVERSE, ERROR_PACKET } = require("./commons"); const withNativeArrayBuffer = typeof ArrayBuffer === "function"; let base64decoder; if (withNativeArrayBuffer) { base64decoder = require("base64-arraybuffer"); } const decodePacket = (encodedPacket, binaryType) => { if (typeof encodedPacket !== "string") { return { type: "message", data: mapBinary(encodedPacket, binaryType) }; } const type = encodedPacket.charAt(0); if (type === "b") { return { type: "message", data: decodeBase64Packet(encodedPacket.substring(1), binaryType) }; } const packetType = PACKET_TYPES_REVERSE[type]; if (!packetType) { return ERROR_PACKET; } return encodedPacket.length > 1 ? { type: PACKET_TYPES_REVERSE[type], data: encodedPacket.substring(1) } : { type: PACKET_TYPES_REVERSE[type] }; }; const decodeBase64Packet = (data, binaryType) => { if (base64decoder) { const decoded = base64decoder.decode(data); return mapBinary(decoded, binaryType); } else { return { base64: true, data }; // fallback for old browsers } }; const mapBinary = (data, binaryType) => { switch (binaryType) { case "blob": return data instanceof ArrayBuffer ? new Blob([data]) : data; case "arraybuffer": default: return data; // assuming the data is already an ArrayBuffer } }; module.exports = decodePacket; ",
"/* * base64-arraybuffer * https://github.com/niklasvh/base64-arraybuffer * * Copyright (c) 2012 Niklas von Hertzen * Licensed under the MIT license. */ (function(chars){ "use strict"; exports.encode = function(arraybuffer) { var bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = ""; for (i = 0; i < len; i+=3) { base64 += chars[bytes[i] >> 2]; base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)]; base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)]; base64 += chars[bytes[i + 2] & 63]; } if ((len % 3) === 2) { base64 = base64.substring(0, base64.length - 1) + "="; } else if (len % 3 === 1) { base64 = base64.substring(0, base64.length - 2) + "=="; } return base64; }; exports.decode = function(base64) { var bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4; if (base64[base64.length - 1] === "=") { bufferLength--; if (base64[base64.length - 2] === "=") { bufferLength--; } } var arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer); for (i = 0; i < len; i+=4) { encoded1 = chars.indexOf(base64[i]); encoded2 = chars.indexOf(base64[i+1]); encoded3 = chars.indexOf(base64[i+2]); encoded4 = chars.indexOf(base64[i+3]); bytes[p++] = (encoded1 << 2) | (encoded2 >> 4); bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2); bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63); } return arraybuffer; }; })("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"); ",
"const Polling = require("./polling"); const globalThis = require("../globalThis"); const rNewline = /\n/g; const rEscapedNewline = /\\n/g; /** * Global JSONP callbacks. */ let callbacks; class JSONPPolling extends Polling { /** * JSONP Polling constructor. * * @param {Object} opts. * @api public */ constructor(opts) { super(opts); this.query = this.query || {}; // define global callbacks array if not present // we do this here (lazily) to avoid unneeded global pollution if (!callbacks) { // we need to consider multiple engines in the same page callbacks = globalThis.___eio = globalThis.___eio || []; } // callback identifier this.index = callbacks.length; // add callback to jsonp global const self = this; callbacks.push(function(msg) { self.onData(msg); }); // append to query string this.query.j = this.index; } /** * JSONP only supports binary as base64 encoded strings */ get supportsBinary() { return false; } /** * Closes the socket. * * @api private */ doClose() { if (this.script) { // prevent spurious errors from being emitted when the window is unloaded this.script.onerror = () => {}; this.script.parentNode.removeChild(this.script); this.script = null; } if (this.form) { this.form.parentNode.removeChild(this.form); this.form = null; this.iframe = null; } super.doClose(); } /** * Starts a poll cycle. * * @api private */ doPoll() { const self = this; const script = document.createElement("script"); if (this.script) { this.script.parentNode.removeChild(this.script); this.script = null; } script.async = true; script.src = this.uri(); script.onerror = function(e) { self.onError("jsonp poll error", e); }; const insertAt = document.getElementsByTagName("script")[0]; if (insertAt) { insertAt.parentNode.insertBefore(script, insertAt); } else { (document.head || document.body).appendChild(script); } this.script = script; const isUAgecko = "undefined" !== typeof navigator && /gecko/i.test(navigator.userAgent); if (isUAgecko) { setTimeout(function() { const iframe = document.createElement("iframe"); document.body.appendChild(iframe); document.body.removeChild(iframe); }, 100); } } /** * Writes with a hidden iframe. * * @param {String} data to send * @param {Function} called upon flush. * @api private */ doWrite(data, fn) { const self = this; let iframe; if (!this.form) { const form = document.createElement("form"); const area = document.createElement("textarea"); const id = (this.iframeId = "eio_iframe_" + this.index); form.className = "socketio"; form.style.position = "absolute"; form.style.top = "-1000px"; form.style.left = "-1000px"; form.target = id; form.method = "POST"; form.setAttribute("accept-charset", "utf-8"); area.name = "d"; form.appendChild(area); document.body.appendChild(form); this.form = form; this.area = area; } this.form.action = this.uri(); function complete() { initIframe(); fn(); } function initIframe() { if (self.iframe) { try { self.form.removeChild(self.iframe); } catch (e) { self.onError("jsonp polling iframe removal error", e); } } try { // ie6 dynamic iframes with target="" support (thanks Chris Lambacher) const html = '<iframe src="javascript:0" name="' + self.iframeId + '">'; iframe = document.createElement(html); } catch (e) { iframe = document.createElement("iframe"); iframe.name = self.iframeId; iframe.src = "javascript:0"; } iframe.id = self.iframeId; self.form.appendChild(iframe); self.iframe = iframe; } initIframe(); // escape \n to prevent it from being converted into \r\n by some UAs // double escaping is required for escaped new lines because unescaping of new lines can be done safely on server-side data = data.replace(rEscapedNewline, "\\\n"); this.area.value = data.replace(rNewline, "\\n"); try { this.form.submit(); } catch (e) {} if (this.iframe.attachEvent) { this.iframe.onreadystatechange = function() { if (self.iframe.readyState === "complete") { complete(); } }; } else { this.iframe.onload = complete; } } } module.exports = JSONPPolling; ",
"const Transport = require("../transport"); const parser = require("engine.io-parser"); const parseqs = require("parseqs"); const yeast = require("yeast"); const { pick } = require("../util"); const { WebSocket, usingBrowserWebSocket, defaultBinaryType } = require("./websocket-constructor"); // detect ReactNative environment const isReactNative = typeof navigator !== "undefined" && typeof navigator.product === "string" && navigator.product.toLowerCase() === "reactnative"; class WS extends Transport { /** * WebSocket transport constructor. * * @api {Object} connection options * @api public */ constructor(opts) { super(opts); this.supportsBinary = !opts.forceBase64; } /** * Transport name. * * @api public */ get name() { return "websocket"; } /** * Opens socket. * * @api private */ doOpen() { if (!this.check()) { // let probe timeout return; } const uri = this.uri(); const protocols = this.opts.protocols; // React Native only supports the 'headers' option, and will print a warning if anything else is passed const opts = isReactNative ? {} : pick( this.opts, "agent", "perMessageDeflate", "pfx", "key", "passphrase", "cert", "ca", "ciphers", "rejectUnauthorized", "localAddress", "protocolVersion", "origin", "maxPayload", "family", "checkServerIdentity" ); if (this.opts.extraHeaders) { opts.headers = this.opts.extraHeaders; } try { this.ws = usingBrowserWebSocket && !isReactNative ? protocols ? new WebSocket(uri, protocols) : new WebSocket(uri) : new WebSocket(uri, protocols, opts); } catch (err) { return this.emit("error", err); } this.ws.binaryType = this.socket.binaryType || defaultBinaryType; this.addEventListeners(); } /** * Adds event listeners to the socket * * @api private */ addEventListeners() { const self = this; this.ws.onopen = function() { self.onOpen(); }; this.ws.onclose = function() { self.onClose(); }; this.ws.onmessage = function(ev) { self.onData(ev.data); }; this.ws.onerror = function(e) { self.onError("websocket error", e); }; } /** * Writes data to socket. * * @param {Array} array of packets. * @api private */ write(packets) { const self = this; this.writable = false; // encodePacket efficient as it uses WS framing // no need for encodePayload let total = packets.length; let i = 0; const l = total; for (; i < l; i++) { (function(packet) { parser.encodePacket(packet, self.supportsBinary, function(data) { // always create a new object (GH-437) const opts = {}; if (!usingBrowserWebSocket) { if (packet.options) { opts.compress = packet.options.compress; } if (self.opts.perMessageDeflate) { const len = "string" === typeof data ? Buffer.byteLength(data) : data.length; if (len < self.opts.perMessageDeflate.threshold) { opts.compress = false; } } } // Sometimes the websocket has already been closed but the browser didn't // have a chance of informing us about it yet, in that case send will // throw an error try { if (usingBrowserWebSocket) { // TypeError is thrown when passing the second argument on Safari self.ws.send(data); } else { self.ws.send(data, opts); } } catch (e) { } --total || done(); }); })(packets[i]); } function done() { self.emit("flush"); // fake drain // defer to next tick to allow Socket to clear writeBuffer setTimeout(function() { self.writable = true; self.emit("drain"); }, 0); } } /** * Called upon close * * @api private */ onClose() { Transport.prototype.onClose.call(this); } /** * Closes socket. * * @api private */ doClose() { if (typeof this.ws !== "undefined") { this.ws.close(); this.ws = null; } } /** * Generates uri for connection. * * @api private */ uri() { let query = this.query || {}; const schema = this.opts.secure ? "wss" : "ws"; let port = ""; // avoid port if default for schema if ( this.opts.port && (("wss" === schema && Number(this.opts.port) !== 443) || ("ws" === schema && Number(this.opts.port) !== 80)) ) { port = ":" + this.opts.port; } // append timestamp to URI if (this.opts.timestampRequests) { query[this.opts.timestampParam] = yeast(); } // communicate binary support capabilities if (!this.supportsBinary) { query.b64 = 1; } query = parseqs.encode(query); // prepend ? to query if (query.length) { query = "?" + query; } const ipv6 = this.opts.hostname.indexOf(":") !== -1; return ( schema + "://" + (ipv6 ? "[" + this.opts.hostname + "]" : this.opts.hostname) + port + this.opts.path + query ); } /** * Feature detection for WebSocket. * * @return {Boolean} whether this transport is available. * @api public */ check() { return ( !!WebSocket && !("__initialize" in WebSocket && this.name === WS.prototype.name) ); } } module.exports = WS; ",
"const globalThis = require("../globalThis"); module.exports = { WebSocket: globalThis.WebSocket || globalThis.MozWebSocket, usingBrowserWebSocket: true, defaultBinaryType: "arraybuffer" }; ",
""use strict"; Object.defineProperty(exports, "__esModule", { value: true }); exports.reconstructPacket = exports.deconstructPacket = void 0; const is_binary_1 = require("./is-binary"); /** * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder. * * @param {Object} packet - socket.io event packet * @return {Object} with deconstructed packet and list of buffers * @public */ function deconstructPacket(packet) { const buffers = []; const packetData = packet.data; const pack = packet; pack.data = _deconstructPacket(packetData, buffers); pack.attachments = buffers.length; // number of binary 'attachments' return { packet: pack, buffers: buffers }; } exports.deconstructPacket = deconstructPacket; function _deconstructPacket(data, buffers) { if (!data) return data; if (is_binary_1.isBinary(data)) { const placeholder = { _placeholder: true, num: buffers.length }; buffers.push(data); return placeholder; } else if (Array.isArray(data)) { const newData = new Array(data.length); for (let i = 0; i < data.length; i++) { newData[i] = _deconstructPacket(data[i], buffers); } return newData; } else if (typeof data === "object" && !(data instanceof Date)) { const newData = {}; for (const key in data) { if (data.hasOwnProperty(key)) { newData[key] = _deconstructPacket(data[key], buffers); } } return newData; } return data; } /** * Reconstructs a binary packet from its placeholder packet and buffers * * @param {Object} packet - event packet with placeholders * @param {Array} buffers - binary buffers to put in placeholder positions * @return {Object} reconstructed packet * @public */ function reconstructPacket(packet, buffers) { packet.data = _reconstructPacket(packet.data, buffers); packet.attachments = undefined; // no longer useful return packet; } exports.reconstructPacket = reconstructPacket; function _reconstructPacket(data, buffers) { if (!data) return data; if (data && data._placeholder) { return buffers[data.num]; // appropriate buffer (should be natural order anyway) } else if (Array.isArray(data)) { for (let i = 0; i < data.length; i++) { data[i] = _reconstructPacket(data[i], buffers); } } else if (typeof data === "object") { for (const key in data) { if (data.hasOwnProperty(key)) { data[key] = _reconstructPacket(data[key], buffers); } } } return data; } ",
" /** * Expose `Backoff`. */ module.exports = Backoff; /** * Initialize backoff timer with `opts`. * * - `min` initial timeout in milliseconds [100] * - `max` max timeout [10000] * - `jitter` [0] * - `factor` [2] * * @param {Object} opts * @api public */ function Backoff(opts) { opts = opts || {}; this.ms = opts.min || 100; this.max = opts.max || 10000; this.factor = opts.factor || 2; this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0; this.attempts = 0; } /** * Return the backoff duration. * * @return {Number} * @api public */ Backoff.prototype.duration = function(){ var ms = this.ms * Math.pow(this.factor, this.attempts++); if (this.jitter) { var rand = Math.random(); var deviation = Math.floor(rand * this.jitter * ms); ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation; } return Math.min(ms, this.max) | 0; }; /** * Reset the number of attempts. * * @api public */ Backoff.prototype.reset = function(){ this.attempts = 0; }; /** * Set the minimum duration * * @api public */ Backoff.prototype.setMin = function(min){ this.ms = min; }; /** * Set the maximum duration * * @api public */ Backoff.prototype.setMax = function(max){ this.max = max; }; /** * Set the jitter * * @api public */ Backoff.prototype.setJitter = function(jitter){ this.jitter = jitter; }; "
],
sourceRoot: ""
}